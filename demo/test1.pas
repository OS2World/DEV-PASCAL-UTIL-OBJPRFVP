{$R-,S-,I-,V-,B-}

unit TEST;

interface

{$I OPDEFINE.INC}

uses
  Dos,
  OpInline,
  OpString,
  OpRoot,
  OpCrt,
  OpColor,
  {$IFDEF UseMouse}
  OpMouse,
  {$ENDIF}
  OpAbsFld,
  OpCmd,
  OpField,
  OpFrame,
  OpWindow,
  OpSelect,
  OpEntry;

{Entry field constants}
const
  idfFileName            = 0;

{Help index constants}
const
  hifFileName            = 1;

type
  UserRecord =
    record
      fFileName            : string[30];
    end;

function InitEntryScreen(var ES : EntryScreen;
                         var UR : UserRecord;
                         var EsColors : ColorSet) : Word;
  {-Initialize entry screen generated by MAKESCRN}

procedure InitUserRecord(var UR : UserRecord);
  {-Initialize user record}

  {===========================================================}

implementation

procedure InitUserRecord(var UR : UserRecord);
begin
  FillChar(UR, SizeOf(UR), 0);
end;

function InitEntryScreen(var ES : EntryScreen;
                         var UR : UserRecord;
                         var EsColors : ColorSet) : Word;
const
  Frame1 = 'ÚÀ¿ÙÄÄ³³';
  WinOptions = wBordered+wClear+wUserContents;
begin
  with ES do begin
    if not InitCustom(2, 3, 78, 8, EsColors, WinOptions) then begin
      InitEntryScreen := InitStatus;
      Exit;
    end;

    wFrame.SetFrameType(Frame1);
    SetWrapMode(WrapAtEdges);

  {idfFileName:}
    AddStringField(
      'File Name', 1, 1, 
      CharStr('X', 30), 1, 11, 30, 
      hifFileName, UR.fFileName);

    if RawError <> 0 then
      ES.Done;

    InitEntryScreen := RawError;
  end;
end;

end.
