program MenuExample;  {EXMENU1.PAS}
uses
  Dos, OpInline, OpString, OpRoot, OpCrt, OpFrame, OpCmd, OpWindow, OpMenu;
{Menu item constants}
const
  miFirst         = 1;
  miAlpha         = 3;
  miBeta          = 4;
  miSecond        = 2;
  miGamma         = 5;
  miDelta         = 6;
function InitMenu(var M : Menu) : Word;
  {-Initialize menu system generated by MAKEMENU}
const
  {Frame constants}
  Frame1 = 'ÕÔ¸¾ÍÍ³³';
  Frame2 = 'ÑÔÑ¾ÍÍ³³';
begin
  with M do begin
    if not InitCustom(2, 2, 16, 2, DefaultColorSet,
                      wBordered+wClear+wUserContents,
                      Horizontal) then begin
      InitMenu := InitStatus;
      Exit;
    end;
    mnOptionsOn(mnAlphaMatch+mnSelectOnMatch+mnArrowSelect+mnAllHotSpots);
    mnOptionsOff(mnAllowPending+mnPopOnSelect+mnUseItemForTopic+
      mnSelectOnClick);
    wFrame.SetFrameType(Frame1);
    AddItem('First', 2, 1, miFirst);
      AddFramedSubMenu(3, 4, 9, 5, Vertical, Frame2);
      AddItem('Alpha', 1, 1, miAlpha);
      AddItem('Beta', 2, 1, miBeta);
      ItemsDone;
    AddItem('Second', 9, 1, miSecond);
      AddFramedSubMenu(9, 4, 15, 5, Vertical, Frame2);
      AddItem('Gamma', 1, 1, miGamma);
      AddItem('Delta', 2, 1, miDelta);
      ItemsDone;
    ItemsDone;
    InitMenu := RawError; {!!.22}
  end;
end;
var
  Status : Word;
  M      : Menu;
begin
  Status := InitMenu(M);
  if Status <> 0 then begin
    WriteLn('Error initializing menu: ', Status);
    Halt(1);
  end;
  M.Draw;
  M.Process;
  {Skeleton for menu choice handling}
  if M.GetLastCommand = ccSelect then
    case M.MenuChoice of
      miAlpha : {do something};
      miBeta  : {"};
      miGamma : {"};
      miDelta : {"};
    end;
  M.Erase;
  WriteLn('Item ', M.MenuChoice);
  WriteLn('Command ', M.GetLastCommand);
  M.Done;
end.
