program MenuExample;  {EXMENU2.PAS}
uses
  Dos, OpInline, OpString, OpRoot, OpCrt, OpFrame, OpCmd, OpWindow, OpMenu;
{Menu item constants}
const
  miFirst         = 1;
  miAlpha         = 3;
  miBeta          = 4;
  miSecond        = 2;
  miGamma         = 5;
  miDelta         = 6;
var
  AlphaOn : Boolean;
  BetaOn : Boolean;
  GammaOn : Boolean;
  DeltaOn : Boolean;
{$F+}
procedure CustomStringProc(var Name : String; Key : LongInt;
                           Selected, Highlighted : Boolean;
                           WPtr : RawWindowPtr);
const OffOn : array[Boolean] of String[3] = ('Off', ' On');
var   On : Boolean;
begin
  case Key of
    miAlpha : On := AlphaOn;
    miBeta  : On := BetaOn;
    miGamma : On := GammaOn;
    miDelta : On := DeltaOn;
    {don't customize the rest of the items}
    else      Exit;
  end;
  Move(OffOn[On][1], Name[Length(Name)-2], 3);
end;
{$F+}
function InitMenu(var M : Menu) : Word;
  {-Initialize menu system generated by MAKEMENU}
const
  {Frame constants}
  Frame1 = 'ÕÔ¸¾ÍÍ³³';
  Frame2 = 'ÑÔÑ¾ÍÍ³³';
begin
  with M do begin
    if not InitCustom(2, 2, 16, 2, DefaultColorSet,
                      wBordered+wClear+wUserContents,
                      Horizontal) then begin
      InitMenu := InitStatus;
      Exit;
    end;
    mnOptionsOn(mnAlphaMatch+mnSelectOnMatch+mnArrowSelect+mnAllHotSpots);
    mnOptionsOff(mnAllowPending+mnPopOnSelect+mnUseItemForTopic+
      mnSelectOnClick);
    wFrame.SetFrameType(Frame1);
    AddItem('First', 2, 1, miFirst);
      AddFramedSubMenu(3, 4, 13, 5, Vertical, Frame2);
      AddItem('Alpha', 1, 1, miAlpha);
      AddItem('Beta', 2, 1, miBeta);
      ItemsDone;
    AddItem('Second', 9, 1, miSecond);
      AddFramedSubMenu(5, 4, 15, 5, Vertical, Frame2);
      AddItem('Gamma', 1, 1, miGamma);
      AddItem('Delta', 2, 1, miDelta);
      ItemsDone;
    ItemsDone;
    InitMenu := RawError; {!!.22}
  end;
end;
var
  Status : Word;
  M      : Menu;
begin
  Status := InitMenu(M);
  if Status <> 0 then begin
    WriteLn('Error initializing menu: ', Status);
    Halt(1);
  end;
  {Initialize state variables}
  AlphaOn := False;
  BetaOn := False;
  GammaOn := False;
  DeltaOn := False;
  {Enable the custom string procedure}
  M.SetCustomStringProc(CustomStringProc);
  repeat
    M.Process;
    if M.GetLastCommand = ccSelect then
      case M.MenuChoice of
        miAlpha : AlphaOn := not AlphaOn;
        miBeta  : BetaOn := not BetaOn;
        miGamma : GammaOn := not GammaOn;
        miDelta : DeltaOn := not DeltaOn;
      end;
  until M.GetLastCommand = ccQuit;
  M.Erase;
  M.Done;
end.
